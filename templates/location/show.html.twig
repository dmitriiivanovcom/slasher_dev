{% extends 'base.html.twig' %}

{% block title %}{{ location.name }}{% endblock %}

{% block body %}
<div class="show-page-wrapper">
    <div class="card" style="background-image: url('{{ location.image ? asset('uploads/locations/' ~ location.image) : asset('img/default_bg.jpg') }}'); position: relative;">
        <div class="corner-block top-left">
            <div class="name slasher-heading">{{ location.name }}</div>
        </div>
        <div class="corner-block bottom-left">
            {% if location.description %}<p style="font-size: 18px;"><strong>Описание:</strong> {{ location.description }}</p>{% endif %}
            {% if location.map %}
                <div id="map-popup" style="display:none; position:fixed; z-index:1000; left:0; top:0; width:100vw; height:100vh; background:rgba(0,0,0,0.95); align-items:center; justify-content:center; flex-direction:column;">
                    <img src="{{ asset('uploads/locations/' ~ location.map) }}" alt="Map of {{ location.name }}" style="max-width:90vw; max-height:80vh; object-fit:contain; border-radius:12px; margin-bottom:2rem;">
                    <button type="button" class="menu-link" id="close-map-btn" style="margin-bottom:2rem;">Close</button>
                </div>
                <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        const showBtn = document.getElementById('show-map-btn');
                        const popup = document.getElementById('map-popup');
                        const closeBtn = document.getElementById('close-map-btn');
                        showBtn.addEventListener('click', function() {
                            popup.style.display = 'flex';
                        });
                        closeBtn.addEventListener('click', function() {
                            popup.style.display = 'none';
                        });
                        document.addEventListener('keydown', function(e) {
                            if (e.key === 'Escape') popup.style.display = 'none';
                        });
                    });
                </script>
            {% endif %}
        </div>
    </div>
    <!-- Список подлокаций теперь вне карточки, абсолютный -->
    <div class="sublocations-global-panel">
        <div class="sublocations-title">Sublocations</div>
        <div class="sublocations-map">
            <button type="button" class="menu-link" id="show-map-btn" style="margin-top: 1em;">Map</button>
        </div>       

        <div class="sublocations-list">
            {% for sub in location.subLocations %}
                <button class="menu-link sublocation-btn" data-id="{{ sub.id }}">{{ sub.name }}</button>
            {% else %}
                <div style="color:#888;">Нет подлокаций</div>
            {% endfor %}
        </div>

    </div>
    <!-- Модальное окно для Sublocations -->
    <div id="sublocation-modal" class="sublocation-modal" style="display:none;">
        <div class="sublocation-modal-content" id="sublocation-modal-content">
            <div class="sublocation-modal-overlay"></div>
            <div class="sublocation-modal-inner">
                <div class="sublocation-modal-title slasher-heading" id="sublocation-modal-title"></div>
                <div class="sublocation-modal-description" id="sublocation-modal-description"></div>
                <button type="button" class="menu-link" id="close-sublocation-modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="action-buttons-container">
    <a class="menu-link" href="{{ path('app_location_index') }}">Back to list</a>
    <a class="menu-link" href="{{ path('app_location_edit', {'id': location.id}) }}">Edit</a>
    {{ include('location/_delete_form.html.twig', { location: location }) }}
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Map popup (оставляем как было)
    // ... существующий код ...

    // Sublocations logic
    const buttons = document.querySelectorAll('.sublocation-btn');
    const modal = document.getElementById('sublocation-modal');
    const modalTitle = document.getElementById('sublocation-modal-title');
    const modalDesc = document.getElementById('sublocation-modal-description');
    const modalImg = document.getElementById('sublocation-modal-image');
    const modalImgWrap = document.querySelector('.sublocation-modal-image-wrapper');
    const closeModal = document.getElementById('close-sublocation-modal');
    const sublocations = [
        {% for sub in location.subLocations %}
        {
            id: {{ sub.id }},
            name: {{ sub.name|json_encode|raw }},
            description: {{ sub.description|json_encode|raw }},
            image: {{ (sub.image ? asset('uploads/locations/' ~ sub.image) : null)|json_encode|raw }}
        }{% if not loop.last %},{% endif %}
        {% endfor %}
    ];
    const modalContent = document.getElementById('sublocation-modal-content');
    function showModal(id) {
        const sub = sublocations.find(s => s.id == id);
        if (sub) {
            modalTitle.textContent = sub.name;
            modalDesc.textContent = sub.description;
            if (sub.image) {
                modalContent.style.backgroundImage = `url('${sub.image}')`;
                modalContent.classList.add('has-bg');
            } else {
                modalContent.style.backgroundImage = '';
                modalContent.classList.remove('has-bg');
            }
            modal.style.display = 'flex';
        }
    }
    buttons.forEach(btn => {
        btn.addEventListener('click', function(e) {
            e.stopPropagation();
            showModal(btn.dataset.id);
        });
    });
    closeModal.addEventListener('click', function() {
        modal.style.display = 'none';
    });
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            modal.style.display = 'none';
        }
    });
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') modal.style.display = 'none';
    });
});
</script>

<style>
.show-page-wrapper {
    display: flex;
    flex-direction: row;
    gap: 2em;
}
.card {
    position: relative;
}
.sublocations-global-panel {
    position: absolute;
    top: 2em;
    right: 2em;
    /* background: rgba(10, 10, 10, 0.92); */
    /* border: 1px solid #444; */
    /* border-radius: 10px; */
    padding: 1em 1.2em;
    min-width: 180px;
    z-index: 1001;
    /* box-shadow: 0 2px 12px 0 #000a; */
    display: flex;
    flex-direction: column;
    align-items: flex-end;
}
.sublocations-title {
    color: #a00;
    font-weight: bold;
    letter-spacing: 2px;
    text-align: right;
    font-family: 'Nosifer', cursive;
    font-size: 1.6rem;
}
.sublocations-map {
    display: flex;
    justify-content: center;
    width: 100%;
    margin-bottom: 20px;
}
.sublocations-list {
    display: flex;
    flex-direction: column;
    gap: 0.5em;
    width: 100%;
}
.sublocation-btn.menu-link {
    width: 100%;
    text-align: center;
    font-size: 1.1em;
    background: none;
    padding: 0.3em 0.7em;
    margin: 0;
    transition: background 0.2s, color 0.2s;
}

.sublocation-modal {
    display: none;
    position: fixed;
    left: 0; top: 0; width: 100vw; height: 100vh;
    background: rgba(0,0,0,0.92);
    z-index: 2;
    align-items: center;
    justify-content: center;
    flex-direction: column;
}
.sublocation-modal-content {
    position: relative;
    background: #181818;
    color: #fff;
    border-radius: 18px;
    box-shadow: 0 2px 32px #000a;
    min-width: 90%;
    min-height: 90%;
    max-width: 90%;
    max-height: 90%;
    width: 80vw;
    height: 70vh;
    display: flex;
    align-items: stretch;
    justify-content: center;
    overflow: hidden;
    background-size: cover;
    background-position: center;
    margin: 0 auto;
}
.sublocation-modal-content.has-bg {
    background-size: cover;
    background-position: center;
}
.sublocation-modal-overlay {
    position: absolute;
    left: 0; top: 0; width: 100%; height: 100%;
    z-index: 1;
}
.sublocation-modal-inner {
    position: relative;
    z-index: 2;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    width: 100%;
    height: 100%;
    padding: 3.5em 2.5em 2.5em 2.5em;
}
.sublocation-modal-title {
    font-size: 2.3rem;
    color: #b30000;
    margin-bottom: 1.2em;
    text-align: center;
    letter-spacing: 2px;
}
.sublocation-modal-description {
    font-size: 1.15rem;
    color: #fff;
    text-align: left;
    line-height: 1.5;
    font-family: inherit;
    word-break: break-word;
    margin-bottom: 2.5em;
    width: 100%;
    max-width: 400px;
}

button#close-sublocation-modal {
    margin: auto;
}

@media (max-width: 900px) {
    .sublocation-modal-content {
        min-width: 0;
        width: 98vw;
        height: 80vh;
        padding: 0;
    }
    .sublocation-modal-inner {
        padding: 2em 1em 1.5em 1em;
    }
    .sublocation-modal-description {
        max-width: 98vw;
    }
}
</style>
{% endblock %} 